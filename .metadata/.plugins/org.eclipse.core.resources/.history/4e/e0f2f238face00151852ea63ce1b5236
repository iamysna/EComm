package com.ecomm.dao;

import java.util.List;

import javax.management.Query;

import org.apache.catalina.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.ecomm.pojo.User;

@Repository
public class UserDaoImplementation implements UserDao{
	
	@Autowired
	private SessionFactory sessionFactory;
	
	public void addUser(User user){
		this.sessionFactory.getCurrentSession().save(user);
	}
	
	public User getUser(Long userId){
		
		String hql = "FROM UserEntity U WHERE U.USER_ID =" +userId;
		
		Session session = this.sessionFactory.getCurrentSession();
		
		Query query = session.createQuery(hql);
		
		List<E> results = query.list();
		
		UserEntity userEntity = null;
		
		if(results!= null && results.size() > 0){
			userEntity = (UserEntity) results.get(0);
			}
		return userEntity;	
	}
	
	public List<UserEntity> getAllUsers(){
		return this.sessionFactory.getCurrentSession().createQuery("from UserEntity").list();
	}
	
	@Transactional
	public UserEntity getUserByUserName(String userName){
		
		String hql = "FROM UserEntity U WHERE U.username = '"+userName+"'";
		
		Session session = this.sessionFactory.getCurrentSession();
			
		Query query = session.createQuery(hql);
			
		System.out.println("query :"+query.getQueryString());
			
		List results = query.list();
			
		UserEntity userEntity = null;
			
		if(results!= null && results.size() > 0){
				
		userEntity = (UserEntity) results.get(0);
		}
		return userEntity;
		
	}
	

}
